name: CI - clone App and Execute Test

on: 
    push:
        branches: [main]
    pull_request:
        branches: [main]
        
jobs:
    tests:
        runs-on: ubuntu-latest

        services: 
            mongo: 
                image: mongo:6.0
                ports:
                    - 27017:27017

        env:
            MONGO_URI: ${{ secrets.MONGO_URI }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}      
            PORT: 6007
            VITE_API_URL: http://localhost:6007/api
    
        steps:
            - name: Checkout current repo
              uses: actions/checkout@v3

            - name: Clone Repo Athena Redux Bank
              run: |
                  git clone https://github.com/juantor16/redux-athena-bank.git app

            - name: Create .env File for Backend
              run: |
                  echo "MONGO_URI=${{ env.MOGO_URI }}" > app/backend/.env  
                  echo "JWT_SECRET=${{ env.JWT_SECRET }}" >> app/backend/.env  
                  echo "PORT=${{ env.PORT }}" >> app/backend/.env  
                  echo "VITE_API_URL=${{ env.VITE_API_URL }}" >> app/backend/.env  

            - name: Installing Backend Dependencies
              run: |
                  cd app/backend
                  npm install 
          
            #Start Backend Server      
            - name: Set Backend
              run: |
                  cd app/backend
                  npm run dev > backend.log 2>&1 &

            #Install Globally wait-on
            - name: Installing wait-on
              run: npm install -g wait-on

            #Wait Backend is set in port 6007
            - name: Waiting Backend is set
              run: wait-on tcp:localhost:6007
          
            #Install Front End Dependencies
            - name: Install Front End dependencies   
              run: |
                  cd app/frontend
                  npm install

            #Start Frontend Server
            - name: Set Frontend
              run: |
                  cd app/frontend
                  npm run dev > frontend.log 2>&1 &    
              env: 
                VITE_API_URL: ${{ env.VITE_API_URL }}
            
            #Wait Front is set
            - name: Waiting Frontend is set
              run: wait-on http://localhost:3000

            #Set Playwright and execute tests
            - name: Install dependencies and Playwright
              run: |
                cd tests
                npm install
                npx playwright install --with-deps

            - name: Run Playwright tests
              run: |
                cd tests
                npx playwright test --reporter=html

            - name: Store reports as artifacts
              if: always()
              uses: actions/upload-artifact@v4
              with: 
                name: playwright-report
                path: ./playwright-report    

            - name: Deploy reports in GitHub Pages   
              if: always()
              run: |
                git config --global user.name "github-actions[bot]"
                git config --global user.email "github-actions[bot]@users.noreply.github.com"

                #Clone GitHub Pages in temporal file
                cd $RUNNER_TEMP
                git clone --depth=1 --branch=gh-pages https://x-access-token:${{ secrets.GH_PAGES_PAT1 }}@github.com/${{ github.repository }} gh-pages
                
                #Clean previous content
                cd gh-pages
                rm -rf ./*

                #Copy new report
                mkdir -r report-${GITHUB_RUN_NUMBER}
                cp -r $GITHUB_WORKSPACE/playwright-report/* ./report-${GITHUB_RUN_NUMBER}/

                #Store Changes
                git add . 
                git commit -m "Playwright Report - Build $GITHUB_RUN_NUMBER"
                git push origin gh-pages

            - name:  Print Link in console
              if: always()
              run: |
                   echo "Report available in: https://${{ github.repository_owner }}.github.io/${{ github.run_number}}/"
